apply plugin: 'com.android.application'
repositories {
    flatDir {
        dirs 'libs'
    }
}
allprojects {
    repositories {
        jcenter()
    }
}
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
    }
}
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "packagename"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 11
        versionName "2.0.2"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    // dismiss build warn
    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }

    productFlavors {
        // file of channal names for publishing the apk
	def path = "./channel.txt"
        file(path).eachLine { channel ->
            "$channel" {
                manifestPlaceholders = [UMENG_VALUE: channel]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("publish keystore path")
            storePassword "publish keystore store password"
            keyAlias "publish keystore alias"
            keyPassword "publish keystore password"
        }
        debug {
            storeFile file("debug keystore path")
            storePassword "debug keystore store password"
            keyAlias "debug keystore alias"
            keyPassword "debug keystore password"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            zipAlignEnabled true
            shrinkResources false

            android.applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // name of output apk : test_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "Unbounded_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}_studio.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }

        dexOptions {
            javaMaxHeapSize "2g"
        }

    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:multidex:1.0.0'
    androidTestCompile 'junit:junit:4.12'
    compile(name:'speechkit-2.1.3', ext: 'aar')
    compile 'com.feezu.liuli:timeselector:1.1.3+'
}
